function oMGW_Update_User_Password()
 string Tel,filename,USER,PASSWORD,FLAG="NO";
 integer handle,m,n,x;  

/*###########################################
  # Leer y/o actualizar PASSWORD de un user #
  ###########################################*/ 
 m=1; //1st oMGW
 n=22; // Last oMGW
 USER="NKFNAB"; PASSWORD="N0k1aSep2023*";
 ask(USER,"Ingrese USER: "); 
 ask(PASSWORD,"Ingrese New PASSWORD: ");
 
 messagebox("Seleccione oMGW Objetivo");
 for(x=m; x<=n; x++) print("*%d/%d %s\n",x,n,oMGW(x)); endfor
 ask(Tel,"Seleccione [oMGW] / All oMGW [ALL]: "); Tel=strupper(Tel);
   filename= "LOG_oMGW_Update_User_Password_" + Tel + PC_TIME() + ".TXT" ;
   handle = fileopen(filename,NEW); fileclose(handle); 
   print("Se ha creado el log: %s\n\n",filename); logenable(LOG_ENABLE_ALL); logset(filename,APPEND); 
 if(Tel == "ALL")
   ask(FLAG,"Update Password [y] / Review Password [NO]: ??");
   for(x=m; x<=n; x++) 
     settextcolor(RGB(0,0,250)); print("\n*%d/%d\n",x,n); settextcolor(RGB(0,0,0));
     if(FLAG=="NO")   oMGW_check_Password(oMGW(x),USER,PASSWORD);  // Revisar usuarios
     elseif(FLAG=="Y") oMGW_Update_Password(oMGW(x),USER,PASSWORD); // Cambiar password
     endif
   endfor
 elseif(Tel<>"ALL")
   oMGW_check_Password(Tel,USER,PASSWORD);
   ask(FLAG,"Cambiar Password:[NO/Y] ?"); FLAG=strupper(FLAG);
   if(FLAG =="Y") 
     oMGW_Update_Password(Tel,USER,PASSWORD); endif
 endif
 print("\nEND OF MACRO. YES!!!");
endfunction
 
/*########################
  # FUNCIONES - NO TOCAR #
  ########################*/
 
string function PC_TIME()
 string Month,Day,PCTime,Year;
 PCTime = getpctime(1); //print("%s",PCTime);
 PCTime=strreplace(PCTime,"-"," "); PCTime=strreplace(PCTime,":","-");
 strscan(PCTime,"%s %s %s %s",Year,Month,Day,PCTime);  
 PCTime = "_" + Day + "_" + Month + "_" + Year + "_" + PCTime; 
 return PCTime;
endfunction 
  
void function LOG_SQUARE(string color,string information )
 integer x,y=1;
 if(color == "red") settextcolor(RGB(200,0,0));
   elseif(color == "yellow") settextcolor(RGB(100,150,0));
   elseif(color == "blue") settextcolor(RGB(0,0,250));
   elseif(color == "green")  settextcolor(RGB(0,200,220));
 endif
 x = strlength(information); x= x + 4; print("\n"); 
 for(y=1 ; y<=x ; y++) logprint("#"); endfor logprint("\n# %s #\n",information); 
 for(y=1 ; y<=x ; y++) logprint("#"); endfor 
 logprint("\n"); settextcolor(RGB(0,0,0));
endfunction

string function oMGW(integer x) /* Nombre e IP del SBS destino */
 string oMGW[];
 oMGW[1]="MGWALK01";
 oMGW[2]="MGWALK02";
 oMGW[3]="MGWARA01";
 oMGW[4]="MGWARA02";
 oMGW[5]="MGWARA03";
 oMGW[6]="MGWARA04";
 oMGW[7]="MGWBAR01";
 oMGW[8]="MGWBUC01";
 oMGW[9]="MGWING01";
 oMGW[10]="MGWING02";
 oMGW[11]="MGWMAR01";
 oMGW[12]="MGWMGA01";
 oMGW[13]="MGWMGA02";
 oMGW[14]="MGWMGA03";
 oMGW[15]="MGWMGA04";
 oMGW[16]="MGWPER01";
 oMGW[17]="MGWPRA01";
 oMGW[18]="MGWTRI01";
 oMGW[19]="MGWVEN01";
 oMGW[20]="MGWVEN02";
 oMGW[21]="MGWVEN03";
 oMGW[22]="MGWVEN04";
 return oMGW[x];
endfunction

void function oMGW_check_Password(string oMGW,string USER, string Password)
 string line,PASS_CHGD[],PASS_EXP[];
 integer x; 
 x=1; device(oMGW); LOG_SQUARE("blue",oMGW);
 print("CHECKING USER && PASSWORD INFO....\n");
 send("fsclish -c \"show troubleshooting user-plane all-context mode 1\"\r"); delay(6000);
   if(getline(line,"'Total context count:'")) print(line); endif    
 send("fsclish -c \"show user-management user user-name %s include-groups yes include-permissions yes\"\r",USER); delay(6000);
   while(getline(line)) 
     if(getline(line,"'Password changed'")) PASS_CHGD[x]=PHRASE(line,"Password changed on                         : ");  endif      
     if(getline(line,"'Password expires'")) PASS_EXP[x]=PHRASE(line,"Password expires on                         : ");  endif  
   endwhile 
   print("%s USER %s PSSWRD_CHGD %s PSSWRD_EXP %s\n",oMGW,USER,PASS_CHGD[x],PASS_EXP[x]); 
   deviceclose(oMGW);   
endfunction

void function oMGW_Update_Password(string oMGW,string USER, string Password)
 string line,PASS_EXP;
 
 PASS_EXP="";
 device(oMGW); LOG_SQUARE("blue",oMGW); 
 send("fsclish -c \"show troubleshooting user-plane all-context mode 1\"\r"); delay(6000);
   if(getline(line,"'Total context count:'")) print(line); endif   
 print("UPDATING PASSWORD....\n");
 send("fsclish\r"); delay(2000);
   send("set user-management passwd set-user-passwd user-name %s\r",USER); delay(4000);
   send("%s\r",Password); delay(4000);
   send("%s\r",Password); delay(4000);
   send("exit\r");  
 send("fsclish -c \"show user-management user user-name %s \"\r",USER); delay(4000); 
   while(getline(line)) 
     if(getline(line,"'Password expires'")) 
       PASS_EXP=PHRASE(line,"Password expires on                         : "); 
     endif  
   endwhile 
   print("%s USER %s PSSWRD_CHGD %s\n",oMGW,USER,PASS_EXP);   
 deviceclose(oMGW);
endfunction

string function PHRASE(string line,string FRASE)
  FRASE=strreplace(line,FRASE,""); 
  FRASE=strreplace(FRASE," ","_");
  strscan(FRASE,"%s",FRASE);  
  return FRASE;
endfunction